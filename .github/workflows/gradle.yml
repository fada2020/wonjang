name: Java CI with Gradle

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

# 테스트 결과 작성을 위해 쓰기권한 추가
permissions: write-all

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      image-name: wonjang-app-image
      working-directory: /home/wonjang
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
      # docker build & push to production
      - name: Docker build & push
        if: contains(github.ref, 'master')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/${{env.image-name}} .
          docker push ${{ secrets.DOCKER_REPO }}/${{env.image-name}}
      - name: server build files deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          port: ${{ secrets.PORT_PROD }}
          source: ./components/*
          target: ${{ env.working-directory }}
          strip_components: 1
        
                 
      ## deploy to production final v2
      - name: Deploy
        uses: appleboy/ssh-action@master
        id: deploy
        if: contains(github.ref, 'master')
        with:
          host: ${{ secrets.HOST_PROD }}
          port: ${{ secrets.PORT_PROD }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          envs: GITHUB_SHA
          script: |
            # Stop running containers if any
            RUNNING_CONTAINERS=$(docker ps -q)
            if [ -n "$RUNNING_CONTAINERS" ]; then
              docker rm -f $RUNNING_CONTAINERS
            fi
            docker pull ${{ secrets.DOCKER_REPO }}/${{env.image-name}}
            docker-compose up --build -d
            docker image prune -f

  alarm:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        run: echo "NOW=$(date -d '+9 hours' +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            🌟 **:bus: 배포 상태: ${{job.status}}! :bus:** 🌟
            👏 배포 내용을 확인해 주세요!!
            ---
            🚀 *배포 일자:* ${{ env.NOW }}
            🌐 *서버:* 아직 없음
            🎉 *GIT 주소:* [GIT 바로가기](https://github.com/fada2020/wonjang)
